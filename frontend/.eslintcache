[{"D:\\dev\\react-mesto-api-full\\frontend\\src\\index.js":"1","D:\\dev\\react-mesto-api-full\\frontend\\src\\serviceWorker.js":"2","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js":"3","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js":"4","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js":"5","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js":"6","D:\\dev\\react-mesto-api-full\\frontend\\src\\mestoAuth.js":"7","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"8","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"9","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js":"10","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js":"11","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js":"12","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"13","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js":"14","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js":"15","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js":"16","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\token.js":"17","D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"18","D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentСardsContext.js":"19","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js":"20","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"21"},{"size":627,"mtime":1608184430891,"results":"22","hashOfConfig":"23"},{"size":5227,"mtime":1608184430893,"results":"24","hashOfConfig":"23"},{"size":8504,"mtime":1608375678939,"results":"25","hashOfConfig":"23"},{"size":2777,"mtime":1608323858007,"results":"26","hashOfConfig":"23"},{"size":2146,"mtime":1608184430852,"results":"27","hashOfConfig":"23"},{"size":1824,"mtime":1608184430854,"results":"28","hashOfConfig":"23"},{"size":1204,"mtime":1608323009593,"results":"29","hashOfConfig":"23"},{"size":632,"mtime":1608184430853,"results":"30","hashOfConfig":"23"},{"size":373,"mtime":1608184430855,"results":"31","hashOfConfig":"23"},{"size":608,"mtime":1608184430852,"results":"32","hashOfConfig":"23"},{"size":2303,"mtime":1608184430851,"results":"33","hashOfConfig":"23"},{"size":1330,"mtime":1608184430851,"results":"34","hashOfConfig":"23"},{"size":1833,"mtime":1608184430850,"results":"35","hashOfConfig":"23"},{"size":1518,"mtime":1608184430854,"results":"36","hashOfConfig":"23"},{"size":1068,"mtime":1608184430853,"results":"37","hashOfConfig":"23"},{"size":1875,"mtime":1608184430855,"results":"38","hashOfConfig":"23"},{"size":261,"mtime":1608184430894,"results":"39","hashOfConfig":"23"},{"size":82,"mtime":1608184430856,"results":"40","hashOfConfig":"23"},{"size":83,"mtime":1608184430856,"results":"41","hashOfConfig":"23"},{"size":1745,"mtime":1608184430854,"results":"42","hashOfConfig":"23"},{"size":1651,"mtime":1608184430851,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dvhaho",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"D:\\dev\\react-mesto-api-full\\frontend\\src\\index.js",[],["91","92"],"D:\\dev\\react-mesto-api-full\\frontend\\src\\serviceWorker.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js",["93"],"D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js",["94"],"import { getToken } from './token';\r\nconst token = getToken('jwt');\r\n\r\nconst handleResponse = res => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Что-то пошло не так! :( ${res.status}`);\r\n}\r\n\r\n\r\nclass Api {\r\n  constructor({ baseUrl, headers }) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _getHeaders() {\r\n    const token = getToken('jwt');\r\n    return {\r\n      ...this._headers,\r\n      'Authorization': `Bearer ${token}`,\r\n    }\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      headers: this._getHeaders(),\r\n      \r\n    }).then(handleResponse);\r\n  }\r\n\r\n  updateUserInfo(formData) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify(formData),\r\n    }).then(handleResponse);\r\n  }\r\n\r\n  updateUserImage(formData) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify(formData),\r\n    }).then(handleResponse);\r\n  }\r\n\r\n  getItems() {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      headers: this._getHeaders(),\r\n    }).then(handleResponse);\r\n  }\r\n\r\n  deleteItem(item) {\r\n    return fetch(`${this._baseUrl}/cards/${item._id}`, {\r\n      method: \"DELETE\",\r\n      headers: this._getHeaders(),\r\n    }).then(handleResponse);\r\n  }\r\n\r\n  // rateItem(cardId, isLiked) {\r\n  //   let methodValue;\r\n  //   isLiked ? (methodValue = \"DELETE\") : (methodValue = \"PUT\");\r\n  //   return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n  //     method: methodValue,\r\n  //     headers: this._headers,\r\n  //   }).then((res) => {\r\n  //     if (res.ok) {\r\n  //       return res.json();\r\n  //     }\r\n  //     return Promise.reject(`Ошибка при добавлении лайка :( ${res.status}`);\r\n  //   });\r\n  // }\r\n\r\n  putLike(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: \"PUT\",\r\n      headers: this._getHeaders(),\r\n    }).then(handleResponse);\r\n  }\r\n\r\n  deleteLike(cardId) {\r\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: this._getHeaders(),\r\n    }).then(handleResponse);\r\n  }\r\n\r\n  createItem(item) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._getHeaders(),\r\n      body: JSON.stringify(item),\r\n    }).then(handleResponse);\r\n  }\r\n}\r\n\r\n// Создание экземпляра класс API для взаимодействия с сервером\r\nconst api = new Api({\r\n  // baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-14\",\r\n  baseUrl: \"http://localhost:3000\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n\r\n","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\mestoAuth.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",["95"],"import React from \"react\";\r\n\r\nexport default function ImagePopup({ isOpen, card, onClose }) {\r\n    return (\r\n        <div className={`popup popup_zoom ${isOpen ? `popup_opened` : \"\"}`}>\r\n            <div className=\"popup__container\">\r\n                <img className=\"popup__image\" src={card && card.link} />\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"popup__close-button_zoom popup__close-button\"\r\n                    onClick={onClose}\r\n                ></button>\r\n                <p className=\"popup__caption\">{card && card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js",["96"],"import React from \"react\"\r\nimport successPicture from \"../images/successPicture.svg\";\r\nimport accessDenied from \"../images/accessDenied.svg\";\r\n\r\n\r\nconst InfoTooltip = ({ onClose, status, isOpen }) => {\r\n\r\n    const loginInfo = {\r\n        success: 'Вы успешно зарегистрировались!',\r\n        denied: 'Что-то пошло не так! Попробуйте ещё раз.'\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={`popup ${isOpen ? `popup_opened` : \"\"}`}>\r\n            <div className=\"popup__form-login\">\r\n                <button\r\n                    className=\"popup__close-button popup__close-button_login\"\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                ></button>\r\n                <img className=\"popup__image-login\" src={status ? successPicture : accessDenied} />\r\n                <h2 className=\"popup__text-login\">\r\n                    {status ? loginInfo.success : loginInfo.denied}\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InfoTooltip","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\token.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentСardsContext.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js",["97"],"import React, { useContext } from \"react\";\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\n\r\nfunction Card({ onClick, onCardDislike, onCardLike, onCardDelete, card, ...rest }) {\r\n  const currentUser = useContext(CurrentUserContext)\r\n  const isOwner = card.owner._id === currentUser._id;\r\n  const isLiked = card.likes.some((i) =>\r\n    i._id === currentUser._id\r\n  )\r\n\r\n  const cardLikeButton = (`element__like-button ${isLiked ? 'element__like-button_active' : ''}`)\r\n\r\n  function handleCardClick() {\r\n    onClick(card);\r\n  }\r\n\r\n  function handleDeleteClick() {\r\n    onCardDelete(card)\r\n  }\r\n\r\n  function handleLikeClick() {\r\n    onCardLike(card)\r\n  }\r\n\r\n  function handleDislikeClick() {\r\n    onCardDislike(card)\r\n  }\r\n\r\n  return (\r\n    <div className=\"element\" {...rest}>\r\n      <img className=\"element__image\" onClick={handleCardClick} src={card && card.link} />\r\n      <div className=\"element__item\">\r\n        <h3 className=\"element__text\">{card && card.name}</h3>\r\n        <div className=\"element__like-container\">\r\n          <button type=\"button\"\r\n            className={`${cardLikeButton}`}\r\n            onClick={() => {\r\n              if (isLiked) {\r\n                handleDislikeClick()\r\n              } else {\r\n                handleLikeClick()\r\n              }\r\n            }}\r\n          ></button>\r\n          <h4 className=\"element__like-counter\">{card && card.likes.length}</h4>\r\n        </div>\r\n        {isOwner && <button\r\n          type=\"button\"\r\n          className=\"element__remove-button\"\r\n          onClick={handleDeleteClick}\r\n        ></button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":160,"column":6,"nodeType":"104","endLine":160,"endColumn":8,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":7,"nodeType":"108","messageId":"109","endLine":2,"endColumn":12},{"ruleId":"110","severity":1,"message":"111","line":7,"column":17,"nodeType":"112","endLine":7,"endColumn":73},{"ruleId":"110","severity":1,"message":"111","line":22,"column":17,"nodeType":"112","endLine":22,"endColumn":100},{"ruleId":"110","severity":1,"message":"111","line":32,"column":7,"nodeType":"112","endLine":32,"endColumn":91},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [tokenCheck]",{"range":"118","text":"119"},[4477,4479],"[tokenCheck]"]