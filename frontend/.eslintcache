[{"D:\\dev\\react-mesto-api-full\\frontend\\src\\index.js":"1","D:\\dev\\react-mesto-api-full\\frontend\\src\\serviceWorker.js":"2","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js":"3","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js":"4","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js":"5","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js":"6","D:\\dev\\react-mesto-api-full\\frontend\\src\\mestoAuth.js":"7","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js":"8","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js":"9","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js":"10","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js":"11","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js":"12","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js":"13","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js":"14","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js":"15","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js":"16","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\token.js":"17","D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js":"18","D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentСardsContext.js":"19","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js":"20","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js":"21"},{"size":627,"mtime":1608544247876,"results":"22","hashOfConfig":"23"},{"size":5227,"mtime":1608544247877,"results":"24","hashOfConfig":"23"},{"size":8509,"mtime":1608544247828,"results":"25","hashOfConfig":"23"},{"size":2804,"mtime":1608664277164,"results":"26","hashOfConfig":"23"},{"size":2146,"mtime":1608544247831,"results":"27","hashOfConfig":"23"},{"size":632,"mtime":1608544247831,"results":"28","hashOfConfig":"23"},{"size":1229,"mtime":1608664275943,"results":"29","hashOfConfig":"23"},{"size":608,"mtime":1608544247830,"results":"30","hashOfConfig":"23"},{"size":1833,"mtime":1608544247828,"results":"31","hashOfConfig":"23"},{"size":2303,"mtime":1608544247830,"results":"32","hashOfConfig":"23"},{"size":373,"mtime":1608544247833,"results":"33","hashOfConfig":"23"},{"size":1518,"mtime":1608544247832,"results":"34","hashOfConfig":"23"},{"size":1875,"mtime":1608544247834,"results":"35","hashOfConfig":"23"},{"size":1068,"mtime":1608544247832,"results":"36","hashOfConfig":"23"},{"size":1824,"mtime":1608544247832,"results":"37","hashOfConfig":"23"},{"size":1330,"mtime":1608544247829,"results":"38","hashOfConfig":"23"},{"size":261,"mtime":1608544247878,"results":"39","hashOfConfig":"23"},{"size":82,"mtime":1608544247834,"results":"40","hashOfConfig":"23"},{"size":83,"mtime":1608544247835,"results":"41","hashOfConfig":"23"},{"size":1745,"mtime":1608544247833,"results":"42","hashOfConfig":"23"},{"size":1649,"mtime":1608544247829,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1dvhaho",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\dev\\react-mesto-api-full\\frontend\\src\\index.js",[],["90","91"],"D:\\dev\\react-mesto-api-full\\frontend\\src\\serviceWorker.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\App.js",["92"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useHistory, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport \"../index.css\";\r\nimport Header from \"./Header\";\r\nimport api from \"../utils/api.js\";\r\nimport { getToken, setToken, removeToken } from \"../utils/token\";\r\nimport * as mestoAuth from \"../mestoAuth\"\r\nimport Main from \"./Main\";\r\nimport Footer from \"./Footer\";\r\nimport ImagePopup from \"./ImagePopup\";\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\"\r\nimport { CurrentCardsContext } from \"../contexts/CurrentСardsContext\"\r\nimport AddPlacePopup from \"./AddPlacePopup\";\r\nimport EditProfilePopup from \"./EditProfilePopup\";\r\nimport EditAvatarPopup from \"./EditAvatarPopup\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport InfoTooltip from \"./InfoTooltip\";\r\n\r\n\r\n\r\nfunction App() {\r\n  // Хуки-состояния\r\n  const [loggedIn, setLoggedIn] = useState(false)\r\n  const [email, setEmail] = useState('')\r\n  const [status, setStatus] = useState(false)\r\n  const [isHeaderMenuOpen, setHeaderMenuOpen] = useState(false)\r\n  const [isAuthPopupOpen, setIsAuthPopupPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({\r\n    isOpen: false,\r\n    link: \"\",\r\n    name: \"\",\r\n  });\r\n  const [currentUser, setCurrentUser] = useState({})\r\n  const [currentCards, setCurrentCards] = useState([])\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      Promise.all([api.getUserInfo(), api.getItems()])\r\n      .then(([userInfo, initialCards]) => {\r\n        setCurrentUser(userInfo);\r\n        setCurrentCards(initialCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }\r\n  }, [loggedIn]);\r\n\r\n\r\n\r\n  // Функции открытия попапов\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleCardClick(props) {\r\n    setSelectedCard({\r\n      isOpen: true,\r\n      link: props.link,\r\n      name: props.name,\r\n    });\r\n  }\r\n\r\n  const handleHeaderMenu =\r\n    useCallback(() =>\r\n      setHeaderMenuOpen(prev => !prev),\r\n      [setHeaderMenuOpen]);\r\n\r\n\r\n\r\n  // Хендлеры карточки \r\n  function handleDeleteClick(card) {\r\n    api.deleteItem(card)\r\n      .then(() => {\r\n        const newCardList = currentCards.filter(item => item._id !== card._id);\r\n        setCurrentCards(newCardList);\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n  function handleLikeClick(card) {\r\n    api.putLike(card._id)\r\n      .then((newCard) => {\r\n        const newCardList = currentCards.map((c) => c._id === card._id ? newCard : c)\r\n        setCurrentCards(newCardList)\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n  function handleDislikeClick(card) {\r\n    api.deleteLike(card._id)\r\n      .then((newCard) => {\r\n        const newCardList = currentCards.map((c) => c._id === card._id ? newCard : c)\r\n        setCurrentCards(newCardList)\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n  function handleUserRegister(email, password) {\r\n    mestoAuth.register(email, password).then(() => {    \r\n        setStatus(true)\r\n        setIsAuthPopupPopupOpen(true)\r\n        history.push('/signin');\r\n    }).catch(err => {\r\n      console.log(err)\r\n      setStatus(false)\r\n      setIsAuthPopupPopupOpen(true)\r\n    })\r\n  }\r\n\r\n  function handleUserLogin(email, password) {\r\n    mestoAuth.authorize(email, password)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          setToken(data.token)\r\n          setEmail(email)\r\n          setLoggedIn(true)\r\n          history.push('/')\r\n        }\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n\r\n\r\n\r\n  // Проверка токена\r\n\r\n  function tokenCheck() {\r\n    const jwt = getToken();\r\n\r\n    if (!jwt) {\r\n      return;\r\n    }\r\n    mestoAuth.getContent(jwt)\r\n      .then((data) => {\r\n        if (data) {\r\n          console.log(data)\r\n          setLoggedIn(true)\r\n          setEmail(data.email)\r\n          history.push('/')\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    tokenCheck();\r\n  }, []);\r\n\r\n  // Удаляем токен из localStorage\r\n\r\n  function signOut() {\r\n    removeToken()\r\n  }\r\n\r\n  // Хендлер закрытия попапов\r\n  function handleClosePopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setSelectedCard({\r\n      isOpen: false,\r\n      link: \"\",\r\n      name: \"\",\r\n    });\r\n    setIsAuthPopupPopupOpen(false)\r\n  }\r\n\r\n  // Хендлеры cабмитов попапов\r\n\r\n  function handleAppPlaceSubmit(card) {\r\n    api.createItem(card)\r\n      .then((card) => {\r\n        setCurrentCards([card, ...currentCards]);\r\n        handleClosePopups()\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n  function handleUpdateUser(userInfo) {\r\n    api.updateUserInfo(userInfo)\r\n      .then((userInfo) => {\r\n        setCurrentUser(userInfo.data)\r\n        handleClosePopups()\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n  function handleUpdateAvatar(userInfo) {\r\n    api.updateUserImage(userInfo)\r\n      .then((userInfo) => {\r\n        setCurrentUser(userInfo)\r\n        handleClosePopups()\r\n      }).catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <CurrentCardsContext.Provider value={currentCards}>\r\n        <div className=\"page\">\r\n          <Header email={email} onClickMenu={isHeaderMenuOpen} onChangeHeaderMenu={handleHeaderMenu} onSignOut={signOut} />\r\n          <Switch>\r\n            <ProtectedRoute exact path='/'\r\n              loggedIn={loggedIn}\r\n              component={Main}\r\n              onClickAvatar={handleEditAvatarClick}\r\n              onClickProfile={handleEditProfileClick}\r\n              onClickNewPlace={handleAddPlaceClick}\r\n              onCardClick={handleCardClick}\r\n              onCardDelete={handleDeleteClick}\r\n              onCardLike={handleLikeClick}\r\n              onCardDislike={handleDislikeClick}\r\n              profileIsOpen={isEditProfilePopupOpen}\r\n              avatarIsOpen={isEditAvatarPopupOpen}\r\n              newPlaceIsOpen={isAddPlacePopupOpen}\r\n              card={selectedCard}>\r\n            </ProtectedRoute>\r\n            <Route path=\"/signin\"><Login onLogin={handleUserLogin} /></Route>\r\n            <Route path=\"/signup\"><Register onRegister={handleUserRegister} /></Route>\r\n            <Route>\r\n              {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/signup\" />}\r\n            </Route>\r\n          </Switch>\r\n          <Footer loggedIn={loggedIn} />\r\n          <EditAvatarPopup\r\n            isOpen={isEditAvatarPopupOpen}\r\n            onClose={handleClosePopups}\r\n            onUpdateAvatar={handleUpdateAvatar}\r\n          />\r\n          <EditProfilePopup\r\n            isOpen={isEditProfilePopupOpen}\r\n            onClose={handleClosePopups}\r\n            onUpdateUser={handleUpdateUser}\r\n          />\r\n          <AddPlacePopup\r\n            isOpen={isAddPlacePopupOpen}\r\n            onClose={handleClosePopups}\r\n            onAddPlace={handleAppPlaceSubmit}\r\n          />\r\n          <InfoTooltip isOpen={isAuthPopupOpen} onClose={handleClosePopups} status={status} />\r\n          <ImagePopup isOpen={selectedCard.isOpen} card={selectedCard} onClose={handleClosePopups} />\r\n          {/* <PopupWithForm\r\n        popupClassName=\"popup_confirm\"\r\n        isOpen={isOpen}\r\n        children={\r\n          <>\r\n            <div className=\"popup__form_confirm popup__form\">\r\n              <button\r\n                className=\"popup__close-button\"\r\n                type=\"button\"\r\n                onClick={handleClosePopups}\r\n              ></button>\r\n              <h2 className=\"popup__text_confirm popup__text\">Вы уверены?</h2>\r\n              <button className=\"popup__submit-button\" type=\"submit\">\r\n                Да\r\n              </button>\r\n            </div>\r\n          </>\r\n        }\r\n      /> */}\r\n        </div>\r\n      </CurrentCardsContext.Provider>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\api.js",["93"],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Header.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ImagePopup.js",["94"],"import React from \"react\";\r\n\r\nexport default function ImagePopup({ isOpen, card, onClose }) {\r\n    return (\r\n        <div className={`popup popup_zoom ${isOpen ? `popup_opened` : \"\"}`}>\r\n            <div className=\"popup__container\">\r\n                <img className=\"popup__image\" src={card && card.link} />\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"popup__close-button_zoom popup__close-button\"\r\n                    onClick={onClose}\r\n                ></button>\r\n                <p className=\"popup__caption\">{card && card.name}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","D:\\dev\\react-mesto-api-full\\frontend\\src\\mestoAuth.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Footer.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\AddPlacePopup.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditProfilePopup.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\ProtectedRoute.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Login.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Register.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\InfoTooltip.js",["95"],"import React from \"react\"\r\nimport successPicture from \"../images/successPicture.svg\";\r\nimport accessDenied from \"../images/accessDenied.svg\";\r\n\r\n\r\nconst InfoTooltip = ({ onClose, status, isOpen }) => {\r\n\r\n    const loginInfo = {\r\n        success: 'Вы успешно зарегистрировались!',\r\n        denied: 'Что-то пошло не так! Попробуйте ещё раз.'\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={`popup ${isOpen ? `popup_opened` : \"\"}`}>\r\n            <div className=\"popup__form-login\">\r\n                <button\r\n                    className=\"popup__close-button popup__close-button_login\"\r\n                    type=\"button\"\r\n                    onClick={onClose}\r\n                ></button>\r\n                <img className=\"popup__image-login\" src={status ? successPicture : accessDenied} />\r\n                <h2 className=\"popup__text-login\">\r\n                    {status ? loginInfo.success : loginInfo.denied}\r\n                </h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default InfoTooltip","D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Main.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\EditAvatarPopup.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\utils\\token.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentUserContext.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\contexts\\CurrentСardsContext.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\PopupWithForm.js",[],"D:\\dev\\react-mesto-api-full\\frontend\\src\\components\\Card.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":160,"column":6,"nodeType":"102","endLine":160,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":7,"nodeType":"106","messageId":"107","endLine":3,"endColumn":12},{"ruleId":"108","severity":1,"message":"109","line":7,"column":17,"nodeType":"110","endLine":7,"endColumn":73},{"ruleId":"108","severity":1,"message":"109","line":22,"column":17,"nodeType":"110","endLine":22,"endColumn":100},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.","ArrayExpression",["113"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [tokenCheck]",{"range":"116","text":"117"},[4477,4479],"[tokenCheck]"]